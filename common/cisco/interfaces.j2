{%- macro render_storm_control(intf) %}
{%- if intf._custom_field_data is defined and intf._custom_field_data.get('storm_control_level') is defined and intf._custom_field_data.get('storm_control_level') | length > 0 %}
 storm-control broadcast level {{ intf._custom_field_data.get('storm_control_level') }}.00
{%- if intf._custom_field_data.get('storm_control_action') is defined and intf._custom_field_data.get('storm_control_action') | length > 0 and intf._custom_field_data.get('storm_control_action') != 'drop' %}
 storm-control action {{ intf._custom_field_data.get('storm_control_action') }}
{%- else %}
 storm-control action shutdown
{%- endif %}
{%- endif %}
{%- endmacro %}

{# Aggregate interfaces #}
{% set device_ifcs = host.interfaces | default([]) %}
{% set module_ifcs = host.all_modules | default([]) | map(attribute='interfaces') | sum(start=[]) %}
{% set all_ifcs = (device_ifcs + module_ifcs) | unique(attribute='name') %}

! Found {{ all_ifcs | length }} interfaces for device {{ host.hostname | default('unknown') }}

{# OSPF interfaces #}
{% set ospf_interfaces = [] %}
{% if host.config_context is defined and host.config_context.ospf is defined and host.config_context.ospf.interfaces is defined %}
{% set ospf_interfaces = host.config_context.ospf.interfaces | map(attribute='name') | list %}
! OSPF configured with {{ ospf_interfaces | length }} interfaces
{% endif %}

{# Render interfaces #}
{% for intf in all_ifcs | sort(attribute='name') %}
interface {{ intf.name }}
{% if intf.description is defined and intf.description | length > 0 %}
 description {{ intf.description }}
{% endif %}

{# IP address #}
{% if intf.ip_addresses is defined and intf.ip_addresses %}
 ip address {{ intf.ip_addresses[0].address | replace('/', ' ') }}
{% endif %}

{# Switchport configuration #}
{% set default_mode = 'access' %}
{% if host.config_context is defined and host.config_context.access_switch_defaults is defined and host.config_context.access_switch_defaults.interface_defaults is defined %}
{% set default_vlan = host.config_context.access_switch_defaults.interface_defaults.access_vlan | default(2) %}
{% set default_voice_vlan = host.config_context.access_switch_defaults.interface_defaults.voice_vlan | default(102) %}
{% if intf.mode is defined and intf.mode | lower == 'access' or (not intf.mode is defined and default_mode == 'access') %}
 switchport mode access
 switchport access vlan {{ default_vlan }}
{% if intf._custom_field_data is defined and intf._custom_field_data.get('voice_vlan') is defined and intf._custom_field_data.get('voice_vlan') | length > 0 %}
 switchport voice vlan {{ intf._custom_field_data.get('voice_vlan') }}
{% else %}
 switchport voice vlan {{ default_voice_vlan }}
{% endif %}
{% if host.config_context.access_switch_defaults.interface_defaults.spanning_tree_portfast | default(false) or (intf._custom_field_data is defined and intf._custom_field_data.get('portfast') is true) %}
 spanning-tree portfast
{% endif %}
{% if host.config_context.access_switch_defaults.interface_defaults.bpduguard | default(false) or (intf._custom_field_data is defined and intf._custom_field_data.get('bpduguard') is true) %}
 spanning-tree bpduguard enable
{% endif %}
{% if intf._custom_field_data is defined and intf._custom_field_data.get('dhcp_snooping_limit') is defined and intf._custom_field_data.get('dhcp_snooping_limit') | length > 0 %}
 ip dhcp snooping limit rate {{ intf._custom_field_data.get('dhcp_snooping_limit') }}
{% else %}
 ip dhcp snooping limit rate 30
{% endif %}
{{ render_storm_control(intf) }}
{% elif intf.mode is defined and intf.mode | lower in ['tagged', 'tagged_all'] or intf.name.startswith('Port-channel') %}
 switchport mode trunk
{% if intf.untagged_vlan is defined and intf.untagged_vlan.vid is defined %}
 switchport trunk native vlan {{ intf.untagged_vlan.vid }}
{% else %}
 switchport trunk native vlan 1000
{% endif %}
{% if intf.tagged_vlans is defined and intf.tagged_vlans %}
{% for vlan in intf.tagged_vlans %}
 switchport trunk allowed vlan add {{ vlan.vid }}
{% endfor %}
{% endif %}
 switchport nonegotiate
{% if intf.lag is defined and intf.lag and intf.lag.name is defined %}
 channel-group {{ intf.lag.name | replace('Port-channel', '') }} mode active
{% endif %}
{{ render_storm_control(intf) }}
{% else %}
 ! Interface {{ intf.name }} has no mode, defaulting to routed
{% endif %}
{% endif %}

{# OSPF configuration #}
{% if ospf_interfaces and intf.name in ospf_interfaces %}
{% set ospf_intf = host.config_context.ospf.interfaces | selectattr('name', 'equalto', intf.name) | first %}
{% if intf.ip_addresses is defined and intf.ip_addresses %}
 ip ospf {{ host.config_context.ospf_group.process_id | default(1) }} area {{ host.config_context.ospf.area | default('0.0.0.0') }}
{% if ospf_intf.md5_key is defined %}
 ip ospf message-digest-key {{ ospf_intf.md5_key }} md5 7 {{ host.config_context.ospf_group.md5_secret | default('ospf_digest') }}
{% endif %}
{% if ospf_intf.network_type is defined %}
 ip ospf network {{ ospf_intf.network_type }}
{% else %}
 ip ospf network {{ 'point-to-point' if intf.name.startswith('Loopback') or intf.name.startswith('Port-channel') else 'broadcast' }}
{% endif %}
{% if ospf_intf.apply_helper | default(false) and intf.name != 'Vlan1000' %}
{% if host.config_context.ospf_group is defined and host.config_context.ospf_group.helper_addresses is defined %}
{% for helper in host.config_context.ospf_group.helper_addresses %}
 ip helper-address {{ helper }}
{% endfor %}
{% endif %}
{% endif %}
{% endif %}
{% endif %}

{# Enable/Disable #}
{% if intf.enabled is defined and intf.enabled %}
 no shutdown
{% else %}
 shutdown
{% endif %}
!
{% endfor %}