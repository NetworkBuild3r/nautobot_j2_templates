{#- interfaces.j2: Main template for rendering Cisco interface configurations -#}
{#- Whitespace control for cleaner output -#}

! DEBUG: Starting interfaces.j2
{%- set ns = namespace() -%} {# Namespace for reusable variables -#}

{#- Define storm control macro -#}
{%- macro storm(custom_fields, is_trunk=false) %}
! DEBUG: Processing storm control for is_trunk={{ is_trunk }}
{%- set level = custom_fields.get('storm_control_level') %}
{%- set action = custom_fields.get('storm_control_action') %}
{%- if level and level != '' %}
storm-control broadcast level {{ level }}
storm-control multicast level {{ level }}
{%- if not is_trunk %}
storm-control unicast level {{ level }}
{%- endif %}
{%- if action and action != '' %}
storm-control action {{ action }}
{%- endif %}
{%- endif %}
{%- endmacro %}

{#- Define common variables with safe defaults -#}
{%- set port_channel_regex = '(?i)^(Port-channel|Po)\d+' %}
{%- set interfaces_all = graphql_data.interfaces if (graphql_data is defined and graphql_data.interfaces is defined) else [] %}
! DEBUG: Found {{ interfaces_all | length }} total interfaces: {{ interfaces_all | map(attribute='name') | join(', ') }}
{%- set port_channels = interfaces_all | selectattr('name', 'match', port_channel_regex) | list %}
{%- set physical_svi_interfaces = interfaces_all | rejectattr('name', 'match', port_channel_regex) | list %}

{#- Safely retrieve uplink description -#}
{%- set default_uplink_description_device = graphql_data.config_context.get('site_pedc', {}).get('uplink_switch', 'PEDC-A-DIST-SW01') if (graphql_data is defined and graphql_data.config_context is defined) else 'PEDC-A-DIST-SW01' %}
{%- set ns.default_uplink_description = 'UPLINK to ' ~ default_uplink_description_device %}