{# common/cisco/aaa.j2 #}

{# — Always enable AAA if new_model is true (or default to true) — #}
{% if host.config_context.aaa.new_model is defined and host.config_context.aaa.new_model %}
aaa new-model

{% endif %}

{# — AUTHENTICATION — #}
{%- set auth = host.config_context.aaa.authentication or {} -%}

{# dot1x:             “dot1x default <value>”     #}
{% if auth.dot1x is defined %}
aaa authentication dot1x default {{ auth.dot1x }}
{% endif %}

{# login.console:     “login console <value>”      #}
{% if auth.login is defined and auth.login.console is defined %}
aaa authentication login console {{ auth.login.console }}
{% endif %}

{# login.default:     “login default <value>”      #}
{% if auth.login is defined and auth.login.default is defined %}
aaa authentication login default {{ auth.login.default }}
{% endif %}

{# enable:            “enable <value>”             #}
{% if auth.enable is defined %}
aaa authentication enable {{ auth.enable }}
{% endif %}


{# — AUTHORIZATION — #}
{%- set authz = host.config_context.aaa.authorization or {} -%}

{# exec:              “exec <value>”               #}
{% if authz.exec is defined %}
aaa authorization exec {{ authz.exec }}
{% endif %}

{# network:           “network <value>”            #}
{% if authz.network is defined %}
aaa authorization network {{ authz.network }}
{% endif %}

{# auth_proxy:        “auth_proxy <value>”         #}
{% if authz.auth_proxy is defined %}
aaa authorization auth_proxy {{ authz.auth_proxy }}
{% endif %}

{# reverse_access:    “reverse-access <value>”     #}
{% if authz.reverse_access is defined %}
aaa authorization reverse-access {{ authz.reverse_access }}
{% endif %}

{# config_commands:   “config-commands <value>”    #}
{% if authz.config_commands is defined %}
aaa authorization config-commands {{ authz.config_commands }}
{% endif %}

{# commands.0 / commands.15: “commands <level> <value>” #}
{% if authz.commands is defined %}
  {% for level, line in authz.commands.items() %}
aaa authorization commands {{ level }} {{ line }}
  {% endfor %}
{% endif %}


{# — ACCOUNTING — #}
{%- set acct = host.config_context.aaa.accounting or {} -%}

{# exec:              “exec <value>”               #}
{% if acct.exec is defined %}
aaa accounting exec {{ acct.exec }}
{% endif %}

{# commands.0 / commands.15: “commands <level> <value>” #}
{% if acct.commands is defined %}
  {% for level, line in acct.commands.items() %}
aaa accounting commands {{ level }} {{ line }}
  {% endfor %}
{% endif %}

{# dot1x:             “dot1x default <value>”      #}
{% if acct.dot1x is defined %}
aaa accounting dot1x default {{ acct.dot1x }}
{% endif %}

{# network:           “network default <value>”    #}
{% if acct.network is defined %}
aaa accounting network default {{ acct.network }}
{% endif %}

{# system:            “system default <value>”     #}
{% if acct.system is defined %}
aaa accounting system default {{ acct.system }}
{% endif %}

{# connection:        “connection default <value>” #}
{% if acct.connection is defined %}
aaa accounting connection default {{ acct.connection }}
{% endif %}

{# delay-start all is always included (not context-driven) — #}
aaa accounting delay-start all

{# auth-proxy under accounting  (optional) — #}
{% if acct.auth_proxy is defined %}
aaa accounting auth-proxy default {{ acct.auth_proxy }}
{% endif %}


{# — RADIUS / TACACS SERVER OPTIONS — #}

{# always include “aaa server radius dynamic-author” (not context-driven) — #}
aaa server radius dynamic-author


{# — GROUP SERVER TACACS+ section — #}
{%- set groups = host.config_context.aaa.server_groups or {} -%}
{% if groups['tacacs+'] is defined and groups['tacacs+'].default.servers is defined %}
aaa group server tacacs+ default
  {% for srv in groups['tacacs+'].default.servers %}
 server name {{ srv.name }}
  {% endfor %}
{% endif %}


{# — TACACS SERVER ENTRIES — #}
{%- set tacacs = host.config_context.aaa.tacacs_servers or [] -%}
{% for s in tacacs %}
tacacs server {{ s.name }}
 address ipv4 {{ s.ip_address }}
 key {% raw %}{{ secrets_group["name"]
       | get_secret_by_secret_group_name(s.secret_group | lower | replace('-', '_'))
       | default("tacacs_key") }}{% endraw %}
{% endfor %}


{# — MISC (e.g. session-id) — #}
{% if host.config_context.aaa.misc is defined and host.config_context.aaa.misc.session_id %}
aaa session-id {{ host.config_context.aaa.misc.session_id }}
{% endif %}
